sudo apt -y update && sudo apt -y upgrade
curl -fsSL https://test.docker.com -o test-docker.sh
sh test-docker.sh
sudo usermod -aG docker $USER
logout
sudo systemctl restart docker
docker ps
sudo chown $USER /var/run/docker.sock

docker network create --driver=bridge cluster

docker container stop core1 && docker container stop core2 && docker container stop core3 && docker container stop core4

docker rm core1 && docker rm core2 && docker rm core3 && docker rm core4

docker run --name=core1 --detach --network=cluster \
    --publish=7474:7474 --publish=7473:7473 --publish=7687:7687 \
    --hostname=core1 \
    --env NEO4J_dbms_mode=CORE \
    --env NEO4J_causal__clustering_expected__core__cluster__size=3 \
    --env NEO4J_causal__clustering_initial__discovery__members=core1:5000,core2:5000,core3:5000 \
    --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
    --env NEO4J_dbms_connector_bolt_advertised__address=localhost:7687 \
    --env NEO4J_dbms_connector_http_advertised__address=localhost:7474 \
    neo4j:4.1-enterprise

docker run --name=core2 --detach --network=cluster \
    --publish=8474:7474 --publish=8473:7473 --publish=8687:7687 \
    --hostname=core2 \
    --env NEO4J_dbms_mode=CORE \
    --env NEO4J_causal__clustering_expected__core__cluster__size=3 \
    --env NEO4J_causal__clustering_initial__discovery__members=core1:5000,core2:5000,core3:5000 \
    --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
    --env NEO4J_dbms_connector_bolt_advertised__address=localhost:8687 \
    --env NEO4J_dbms_connector_http_advertised__address=localhost:8474 \
    neo4j:4.1-enterprise

docker run --name=core3 --detach --network=cluster \
    --publish=9474:7474 --publish=9473:7473 --publish=9687:7687 \
    --hostname=core3 \
    --env NEO4J_dbms_mode=CORE \
    --env NEO4J_causal__clustering_expected__core__cluster__size=3 \
    --env NEO4J_causal__clustering_initial__discovery__members=core1:5000,core2:5000,core3:5000 \
    --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
    --env NEO4J_dbms_connector_bolt_advertised__address=localhost:9687 \
    --env NEO4J_dbms_connector_http_advertised__address=localhost:9474 \
    neo4j:4.1-enterprise

docker run --name=core4 --detach --network=cluster \
    --publish=17474:7474 --publish=17473:7473 --publish=17687:7687 \
    --hostname=core4 \
    --env NEO4J_dbms_mode=CORE \
    --env NEO4J_causal__clustering_expected__core__cluster__size=3 \
    --env NEO4J_causal__clustering_initial__discovery__members=core1:5000,core2:5000,core3:5000 \
    --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
    --env NEO4J_dbms_connector_bolt_advertised__address=localhost:17687 \
    --env NEO4J_dbms_connector_http_advertised__address=localhost:17474 \
    neo4j:4.1-enterprise


#Browse: http://Public_IP>:7474, http://Public_IP>:8474, http://Public_IP>:9474

#Additional instances can be added to the cluster in an ad-hoc fashion.
docker run --name=read-replica1 --detach --network=cluster \
         --publish=10474:7474 --publish=10473:7473 --publish=10687:7687 \
         --hostname=read-replica1 \
         --env NEO4J_dbms_mode=READ_REPLICA \
         --env NEO4J_causal__clustering_initial__discovery__members=core1:5000,core2:5000,core3:5000 \
         --env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \
         --env NEO4J_dbms_connector_bolt_advertised__address=localhost:10687 \
         --env NEO4J_dbms_connector_http_advertised__address=localhost:10474 \
         neo4j:4.1-enterprise

docker container stop core1
docker container stop core2
docker container stop core3
docker container stop core4

docker container start core1
docker container start core2
docker container start core3
docker container start core4

docker exec -it core1 bash -c "tail -f -n 200 /logs/debug.log"
docker exec -it core2 bash -c "tail -f -n 200 /logs/debug.log"
docker exec -it core3 bash -c "tail -f -n 200 /logs/debug.log"
docker exec -it core4 bash -c "tail -f -n 200 /logs/debug.log"
docker exec -it read-replica1 bash -c "tail -f -n 200 /logs/debug.log"

#Cypher Commands
:sysinfo
call dbms.cluster.overview()